{"version":3,"file":"component---src-pages-index-js-4514ce11d245dd289eb3.js","mappings":"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","sources":["webpack://v1/./src/components/sections/education.js","webpack://v1/./src/pages/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\nimport { srConfig } from '@config';\r\nimport { KEY_CODES } from '@utils';\r\nimport sr from '@utils/sr';\r\nimport { usePrefersReducedMotion } from '@hooks';\r\n\r\nconst StyledJobsSection = styled.section`\r\n  max-width: 700px;\r\n\r\n  .inner {\r\n    display: flex;\r\n\r\n    @media (max-width: 600px) {\r\n      display: block;\r\n    }\r\n\r\n    // Prevent container from jumping\r\n    @media (min-width: 700px) {\r\n      min-height: 340px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledTabList = styled.div`\r\n  position: relative;\r\n  z-index: 3;\r\n  width: max-content;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    overflow-x: auto;\r\n    width: calc(100% + 100px);\r\n    padding-left: 50px;\r\n    margin-left: -50px;\r\n    margin-bottom: 30px;\r\n  }\r\n  @media (max-width: 480px) {\r\n    width: calc(100% + 50px);\r\n    padding-left: 25px;\r\n    margin-left: -25px;\r\n  }\r\n\r\n  li {\r\n    &:first-of-type {\r\n      @media (max-width: 600px) {\r\n        margin-left: 50px;\r\n      }\r\n      @media (max-width: 480px) {\r\n        margin-left: 25px;\r\n      }\r\n    }\r\n    &:last-of-type {\r\n      @media (max-width: 600px) {\r\n        padding-right: 50px;\r\n      }\r\n      @media (max-width: 480px) {\r\n        padding-right: 25px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledTabButton = styled.button`\r\n  ${({ theme }) => theme.mixins.link};\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: var(--tab-height);\r\n  padding: 0 20px 2px;\r\n  border-left: 2px solid var(--lightest-navy);\r\n  background-color: transparent;\r\n  color: ${({ isActive }) => (isActive ? 'var(--green)' : 'var(--slate)')};\r\n  font-family: var(--font-mono);\r\n  font-size: var(--fz-xs);\r\n  text-align: left;\r\n  white-space: nowrap;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0 15px 2px;\r\n  }\r\n  @media (max-width: 600px) {\r\n    ${({ theme }) => theme.mixins.flexCenter};\r\n    min-width: 120px;\r\n    padding: 0 15px;\r\n    border-left: 0;\r\n    border-bottom: 2px solid var(--lightest-navy);\r\n    text-align: center;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: var(--light-navy);\r\n  }\r\n`;\r\n\r\nconst StyledHighlight = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 10;\r\n  width: 2px;\r\n  height: var(--tab-height);\r\n  border-radius: var(--border-radius);\r\n  background: var(--green);\r\n  transform: translateY(calc(${({ activeTabId }) => activeTabId} * var(--tab-height)));\r\n  transition: transform 0.25s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n  transition-delay: 0.1s;\r\n\r\n  @media (max-width: 600px) {\r\n    top: auto;\r\n    bottom: 0;\r\n    width: 100%;\r\n    max-width: var(--tab-width);\r\n    height: 2px;\r\n    margin-left: 50px;\r\n    transform: translateX(calc(${({ activeTabId }) => activeTabId} * var(--tab-width)));\r\n  }\r\n  @media (max-width: 480px) {\r\n    margin-left: 25px;\r\n  }\r\n`;\r\n\r\nconst StyledTabPanels = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-left: 20px;\r\n\r\n  @media (max-width: 600px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst StyledTabPanel = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  padding: 10px 5px;\r\n\r\n  ul {\r\n    ${({ theme }) => theme.mixins.fancyList};\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 2px;\r\n    font-size: var(--fz-xxl);\r\n    font-weight: 500;\r\n    line-height: 1.3;\r\n\r\n    .company {\r\n      color: var(--green);\r\n    }\r\n  }\r\n\r\n  .range {\r\n    margin-bottom: 25px;\r\n    color: var(--light-slate);\r\n    font-family: var(--font-mono);\r\n    font-size: var(--fz-xs);\r\n  }\r\n`;\r\n\r\nconst Education = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      jobs: allMarkdownRemark(\r\n        filter: { fileAbsolutePath: { regex: \"/content/education/\" } }\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n      ) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              title\r\n              school\r\n              location\r\n              range\r\n              url\r\n            }\r\n            html\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const jobsData = data.jobs.edges;\r\n\r\n  const [activeTabId, setActiveTabId] = useState(0);\r\n  const [tabFocus, setTabFocus] = useState(null);\r\n  const tabs = useRef([]);\r\n  const revealContainer = useRef(null);\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n\r\n  useEffect(() => {\r\n    if (prefersReducedMotion) {\r\n      return;\r\n    }\r\n\r\n    sr.reveal(revealContainer.current, srConfig());\r\n  }, [prefersReducedMotion]);\r\n\r\n  const focusTab = () => {\r\n    if (tabs.current[tabFocus]) {\r\n      tabs.current[tabFocus].focus();\r\n      return;\r\n    }\r\n    // If we're at the end, go to the start\r\n    if (tabFocus >= tabs.current.length) {\r\n      setTabFocus(0);\r\n    }\r\n    // If we're at the start, move to the end\r\n    if (tabFocus < 0) {\r\n      setTabFocus(tabs.current.length - 1);\r\n    }\r\n  };\r\n\r\n  // Only re-run the effect if tabFocus changes\r\n  useEffect(() => focusTab(), [tabFocus]);\r\n\r\n  // Focus on tabs when using up & down arrow keys\r\n  const onKeyDown = e => {\r\n    switch (e.key) {\r\n      case KEY_CODES.ARROW_UP: {\r\n        e.preventDefault();\r\n        setTabFocus(tabFocus - 1);\r\n        break;\r\n      }\r\n\r\n      case KEY_CODES.ARROW_DOWN: {\r\n        e.preventDefault();\r\n        setTabFocus(tabFocus + 1);\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledJobsSection id=\"education\" ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Education</h2>\r\n      <div className=\"inner\">\r\n        <StyledTabList role=\"tablist\" aria-label=\"Job tabs\" onKeyDown={e => onKeyDown(e)}>\r\n          {jobsData &&\r\n            jobsData.map(({ node }, i) => {\r\n              const { title } = node.frontmatter;\r\n              return (\r\n                <StyledTabButton\r\n                  key={i}\r\n                  isActive={activeTabId === i}\r\n                  onClick={() => setActiveTabId(i)}\r\n                  ref={el => (tabs.current[i] = el)}\r\n                  id={`tab-${i}`}\r\n                  role=\"tab\"\r\n                  tabIndex={activeTabId === i ? '0' : '-1'}\r\n                  aria-selected={activeTabId === i ? true : false}\r\n                  aria-controls={`panel-${i}`}>\r\n                  <span>{title}</span>\r\n                </StyledTabButton>\r\n              );\r\n            })}\r\n          <StyledHighlight activeTabId={activeTabId} />\r\n        </StyledTabList>\r\n\r\n        <StyledTabPanels>\r\n          {jobsData &&\r\n            jobsData.map(({ node }, i) => {\r\n              const { frontmatter, html } = node;\r\n              const { title, url, school, range } = frontmatter;\r\n\r\n              return (\r\n                <CSSTransition key={i} in={activeTabId === i} timeout={250} classNames=\"fade\">\r\n                  <StyledTabPanel\r\n                    id={`panel-${i}`}\r\n                    role=\"tabpanel\"\r\n                    tabIndex={activeTabId === i ? '0' : '-1'}\r\n                    aria-labelledby={`tab-${i}`}\r\n                    aria-hidden={activeTabId !== i}\r\n                    hidden={activeTabId !== i}>\r\n                    <h3>\r\n                      <span>{title}</span>\r\n                      <span className=\"company\">\r\n                        &nbsp;@&nbsp;\r\n                        <a href={url} className=\"inline-link\">\r\n                          {school}\r\n                        </a>\r\n                      </span>\r\n                    </h3>\r\n\r\n                    <p className=\"range\">{range}</p>\r\n\r\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\r\n                  </StyledTabPanel>\r\n                </CSSTransition>\r\n              );\r\n            })}\r\n        </StyledTabPanels>\r\n      </div>\r\n    </StyledJobsSection>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Layout, Hero, About, Jobs, Featured, Projects, Contact } from '@components';\r\nimport Education from '../components/sections/education';\r\n\r\nconst StyledMainContainer = styled.main`\r\n  counter-reset: section;\r\n`;\r\n\r\nconst IndexPage = ({ location }) => (\r\n  <Layout location={location}>\r\n    <StyledMainContainer className=\"fillHeight\">\r\n      <Hero />\r\n      <About />\r\n      <Jobs />\r\n      <Education />\r\n      <Featured />\r\n      <Projects />\r\n      <Contact />\r\n    </StyledMainContainer>\r\n  </Layout>\r\n);\r\n\r\nIndexPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n"],"names":["StyledJobsSection","styled","StyledTabList","StyledTabButton","theme","mixins","link","isActive","flexCenter","StyledHighlight","activeTabId","StyledTabPanels","StyledTabPanel","fancyList","jobsData","useStaticQuery","jobs","edges","useState","setActiveTabId","tabFocus","setTabFocus","tabs","useRef","revealContainer","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","current","srConfig","focus","length","id","ref","className","role","onKeyDown","e","key","KEY_CODES","preventDefault","map","i","title","node","frontmatter","onClick","el","tabIndex","html","url","school","range","CSSTransition","in","timeout","classNames","hidden","href","dangerouslySetInnerHTML","__html","StyledMainContainer","location"],"sourceRoot":""}